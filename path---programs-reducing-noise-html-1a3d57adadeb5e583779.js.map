{"version":3,"sources":["webpack:///path---programs-reducing-noise-html-1a3d57adadeb5e583779.js","webpack:///./.cache/json/programs-reducing-noise-html.json"],"names":["webpackJsonp","713","module","exports","data","markdownRemark","html","frontmatter","path","id","title","description","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,o9DAAAC,aAAo/DC,KAAA,gCAAAC,GAAA,0BAAAC,MAAA,iBAAAC,YAAA,QAAoHC","file":"path---programs-reducing-noise-html-1a3d57adadeb5e583779.js","sourcesContent":["webpackJsonp([225196727163357],{\n\n/***/ 713:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Once your program launches <a href=\\\"/hackers/private-vs-public-programs.html\\\">publicly</a>, you enable the entire hacker community to submit vulnerability reports to your program.  Though publicly launching your program is a huge accomplishment, it also means that your program is more susceptible to noise from invalid or low-impact reports. Receiving such reports makes it difficult to maintain healthy programs with healthy response times as programs are spending time filtering through these low priority reports.</p>\\n<p>In order to help you and your program become more successful, HackerOne has implemented features to help you reduce noise from low-impact reports. These features include: </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Feature</th>\\n<th>Details</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/programs/human-augmented-signal.html\\\">Human-Augmented Signal</a></td>\\n<td>HackerOne Security Analysts will review reports that have a high chance of being invalid and will close any invalid report as \\n<i>\\nNot Applicable\\n</i>\\n.</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/programs/triggers.html\\\">Triggers</a></td>\\n<td>Set up an automated action when your program receives a report with or without a given trigger word. Triggers aid in reducing noise as they can flag certain reports.</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/programs/signal-requirements.html\\\">Signal Requirements</a></td>\\n<td>Set a minimum Signal hackers must reach in order to submit reports to your program. This ensures that only hackers with a certain skill level are able to report vulnerabilities.</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/programs/defining-scope.html\\\">Define your Scope</a></td>\\n<td>Define your scope and the assets you want hackers to hack on. This guides hackers to focus on the right targets that you’re interested in.</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>You’re free to implement 1 or all of these features. For the best results in reducing unwanted noise for your program, it’s good practice to set up each one.</p>\",\"frontmatter\":{\"path\":\"/programs/reducing-noise.html\",\"id\":\"programs/reducing-noise\",\"title\":\"Reducing Noise\",\"description\":null}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---programs-reducing-noise-html-1a3d57adadeb5e583779.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Once your program launches <a href=\\\"/hackers/private-vs-public-programs.html\\\">publicly</a>, you enable the entire hacker community to submit vulnerability reports to your program.  Though publicly launching your program is a huge accomplishment, it also means that your program is more susceptible to noise from invalid or low-impact reports. Receiving such reports makes it difficult to maintain healthy programs with healthy response times as programs are spending time filtering through these low priority reports.</p>\\n<p>In order to help you and your program become more successful, HackerOne has implemented features to help you reduce noise from low-impact reports. These features include: </p>\\n<table>\\n<thead>\\n<tr>\\n<th>Feature</th>\\n<th>Details</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><a href=\\\"/programs/human-augmented-signal.html\\\">Human-Augmented Signal</a></td>\\n<td>HackerOne Security Analysts will review reports that have a high chance of being invalid and will close any invalid report as \\n<i>\\nNot Applicable\\n</i>\\n.</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/programs/triggers.html\\\">Triggers</a></td>\\n<td>Set up an automated action when your program receives a report with or without a given trigger word. Triggers aid in reducing noise as they can flag certain reports.</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/programs/signal-requirements.html\\\">Signal Requirements</a></td>\\n<td>Set a minimum Signal hackers must reach in order to submit reports to your program. This ensures that only hackers with a certain skill level are able to report vulnerabilities.</td>\\n</tr>\\n<tr>\\n<td><a href=\\\"/programs/defining-scope.html\\\">Define your Scope</a></td>\\n<td>Define your scope and the assets you want hackers to hack on. This guides hackers to focus on the right targets that you’re interested in.</td>\\n</tr>\\n</tbody>\\n</table>\\n<p>You’re free to implement 1 or all of these features. For the best results in reducing unwanted noise for your program, it’s good practice to set up each one.</p>\",\"frontmatter\":{\"path\":\"/programs/reducing-noise.html\",\"id\":\"programs/reducing-noise\",\"title\":\"Reducing Noise\",\"description\":null}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/programs-reducing-noise-html.json\n// module id = 713\n// module chunks = 225196727163357"],"sourceRoot":""}